// RobotBuilder Version: 6.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot;

import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 * The Constants class provides a convenient place for teams to hold robot-wide numerical or boolean
 * constants.  This class should not be used for any other purpose.  All constants should be
 * declared globally (i.e. public static).  Do not put anything functional in this class.
 *
 * <p>It is advised to statically import this class (or one of its inner classes) wherever the
 * constants are needed, to reduce verbosity.
 */
public class Constants {
    public static final class DPAD {
        public static final int kUp = 0;
        public static final int kRight = 90;
        public static final int kDown = 180;
        public static final int kLeft = 270; 
    }
    public static class PlacementSelector {

        private static boolean[][] array = new boolean[4][2];
        private static int currentRow = 0;
        private static int currentCol = 0;
    
        public PlacementSelector() {
            // Initially set the first element to true
            array[currentRow][currentCol] = true;
        }
    
        public static void move(int direction) {
            // Set the current true element to false
            array[currentRow][currentCol] = false;
            SmartDashboard.putBoolean(currentRow+"-"+currentCol, false);
    
            if (direction == Constants.DPAD.kDown && currentRow > 0) {
                currentRow--;
            } else if (direction == Constants.DPAD.kUp && currentRow < array.length - 1) {
                currentRow++;
            } else if (direction == Constants.DPAD.kLeft && currentCol > 0) {
                currentCol--;
            } else if (direction == Constants.DPAD.kRight && currentCol < array[0].length - 1) {
                currentCol++;
            }
    
            // Set the new position to true
            array[currentRow][currentCol] = true;
            SmartDashboard.putBoolean(currentRow+"-"+currentCol, true);
        }
        public static int getCurrentCol() { 
            return currentCol;
        }
        public static int getCurrentRow() { 
            return currentRow;
        }
   
        public static void printArray() { 
            for (boolean[] row : array) {
                for (boolean element : row) {
                    System.out.print(element + " ");
                }
                System.out.println();
            }
        }
    }
}

